@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq
@using System.Xml.Linq
@using System.ComponentModel.DataAnnotations

<h3>Edit Form</h3>

@if (classModel != null)
{
    <EditForm Model="@classModel" OnValidSubmit="HandleFormSubmit">
        <InputText @bind-Value="classModel.Name" />
        <InputText @bind-Value="classModel.Age" />

        <button type="submit">Submit</button>
    </EditForm>
}

@code {
    private JObject? jsonModel { get; set; }
    private string originalXml = "<root><Name>John</Name><Age>30</Age></root>";
    MyFauxForm2Class? classModel { get; set; }
    public class MyFauxForm2Class
    {
        [Required]
        public string Name { get; set; } = "";
        [Required]
        public string Age { get; set; } = "";
        public JObject ToJObject()
        {
            return JObject.FromObject(this);
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        // Convert XML to JSON
        jsonModel = JObject.Parse(JsonConvert.SerializeXNode(XDocument.Parse(originalXml).Root));
        classModel = jsonModel["root"].ToObject<MyFauxForm2Class>();
    }

    private void HandleFormSubmit()
    {
        // Convert MyClass instance to JObject
        JObject jObject = classModel.ToJObject();

        // Convert JSON to XML
        var updatedXml = JsonConvert.DeserializeXNode(jObject.ToString(), "root");

        // Replace part of the original XML with updated data
        var originalXDoc = XDocument.Parse(originalXml);
        var updatedXElement = updatedXml.Root;
        originalXDoc.Root.ReplaceWith(updatedXElement);

        // Print the updated XML
        Console.WriteLine(originalXDoc.ToString());
    }
}
