@using Newtonsoft.Json.Linq
@using Panels_And_Forms.Models

@if (previewModel != null)
{
    @if (previewModel.Type == JTokenType.Object)
    {
        <MudGrid>
            <MudItem>
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-8 mud-theme-secondary">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => HandleClick(previewModel[FirstNameEnum].ToString())">
                        @previewModel["FirstName"].ToString()
                    </MudButton>
                    @if(@previewModel["City"] != null && @previewModel["City"]["Name"] != null)
                    {
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => HandleClick(previewModel[FirstNameEnum].ToString(), previewModel[CityEnum][CityNameEnum].ToString())">
                            @(previewModel["FirstName"].ToString() + "'s City")
                        </MudButton>
                    }
                </MudPaper>
            </MudItem>
        </MudGrid>
    }
    else if (previewModel.Type == JTokenType.Array)
    {
        @foreach (JToken jt in previewModel)
        {
            <MudGrid>
                <MudItem>
                    <MudPaper Class="d-flex align-center justify-center mud-width-full py-8 mud-theme-secondary">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => HandleClick(jt[FirstNameEnum].ToString())">
                            @jt["FirstName"].ToString()
                        </MudButton>
                        @if(@jt["City"] != null && @jt["City"]["Name"] != null)
                        {
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => HandleClick(jt[FirstNameEnum].ToString(), jt[CityEnum][CityNameEnum].ToString())">
                                @(jt["FirstName"].ToString() + "'s City")
                            </MudButton>
                        }
                    </MudPaper>
                </MudItem>
            </MudGrid>
        }
    }
}

@code {
    [Parameter]
    public JToken? previewModel { get; set; }

    [Parameter]
    public string state { get; set; } = "";

    [Parameter]
    public EventCallback<PreviewClickInformation> OnChildClick { get; set; }

    private string FirstNameEnum = "FirstName";
    private string CityEnum = "City";
    private string CityNameEnum = "Name";

    private async Task HandleClick(string name, string? city = null)
    {
        // Pass a string value to the parent component
        PreviewClickInformation info = new(){State = state, FirstName = name, City = city};
        @* await OnChildClick.InvokeAsync(state + " " + name + " " + city); *@
        await OnChildClick.InvokeAsync(info);
    }
}